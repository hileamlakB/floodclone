October 17-18: Improved philosphy
    - CheckBrainstroming.md
        - definined a utility function
        - created redistirbution factor instead of high bandwidth (for priortization)
        - redistribution factor function still needs to be decided
        - grounded the system design philosphies on the utility function calcuation  

Ocotober 19: Implemented fileManager in python
    - While implementing the FileManager class in python I and measing performance
    I realized it taks a long time to split files and should only be don in parallel, which 
    isn't well suported in python and thus have made the decision to implement this program in 
    c++

October 20: Implemented thread pool
    - I decided I will neeed a thread pool that will be used by among all classes
    - Moreover all classes might have their functions called within a thread
    so it is impotant to make classes thread safe and also use the thread pool 
    insdie the classes to get optimum result.
    - Had to install g++-multilib for fsanitizer support make sure to include that
    in the installation guide (sudo apt-get install g++-multilib)


Nov 4: Completed the sender file manager class
    - had to install sudo apt-get install libssl-dev for managing md5checksum
    - which might not be requried and could be removed to speed up code
    - Created differnt methods for the filemanager class, including send, recieve, initalize, split, merge
    - Make sure the send fucntion could run a thread safe way when the piece being sent isn't 
    avialable, if it isn't avialable it shoudl sleep and wake up again so that available pieces
    could be sent

    - i just realized recieving reconstructing could be done at the same time, 
    there is no point in doing them separelty in two steps instead we can use mmaped file to direclty copy data
    in to the reconstract file at the same tim as creating the piece fie that could be used for future sharing

    - I need to addd a feature to check available and missing pieces
    
    - I will need to implement uint tests and look into how unit test creations work in c++